# Generated by Django 5.2.5 on 2025-08-26 09:34

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('trainings', '0003_certificate'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='JobRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Görev Adı')),
                ('code', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Kod')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Görev Tanımı',
                'verbose_name_plural': 'Görev Tanımları',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='JobRoleAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_from', models.DateField(default=django.utils.timezone.now, verbose_name='Başlangıç')),
                ('effective_to', models.DateField(blank=True, null=True, verbose_name='Bitiş')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('job_role', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assignments', to='trainings.jobrole', verbose_name='Görev')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_assignments', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Kullanıcı Görev Ataması',
                'verbose_name_plural': 'Kullanıcı Görev Atamaları',
                'indexes': [models.Index(fields=['user', 'is_active'], name='trainings_j_user_id_7c5422_idx'), models.Index(fields=['job_role', 'is_active'], name='trainings_j_job_rol_c23a55_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('effective_to__isnull', True), ('effective_to__gte', models.F('effective_from')), _connector='OR'), name='ck_effective_dates')],
            },
        ),
        migrations.CreateModel(
            name='TrainingRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requirement_type', models.CharField(choices=[('required', 'Zorunlu'), ('optional', 'Önerilen')], default='required', max_length=10, verbose_name='Tür')),
                ('validity_months', models.PositiveIntegerField(blank=True, help_text='Boş veya 0 = süresiz/tekrarsız.', null=True, verbose_name='Geçerlilik (ay)')),
                ('notes', models.TextField(blank=True, verbose_name='Notlar')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('job_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='trainings.jobrole', verbose_name='Görev')),
                ('training', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='role_requirements', to='trainings.training', verbose_name='Eğitim')),
            ],
            options={
                'verbose_name': 'Görev Eğitim Gerekliliği',
                'verbose_name_plural': 'Görev Eğitim Gereklilikleri',
                'constraints': [models.UniqueConstraint(fields=('job_role', 'training'), name='uq_jobrole_training_unique'), models.CheckConstraint(condition=models.Q(('validity_months__gte', 0), ('validity_months__isnull', True), _connector='OR'), name='ck_validity_nonnegative')],
            },
        ),
    ]
